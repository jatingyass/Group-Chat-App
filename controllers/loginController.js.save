
const jwt = require('jsonwebtoken');
const bcrypt = require('bcryptjs');
const { User } = require('../models');
const dotenv = require('dotenv');

dotenv.config();

exports.loginUser = async (req, res) => {
    const { email, password } = req.body;

    if(!email || !password) {
        return res.status(400).json({ success: false, message: 'Email and password are required' });
    }

    try{
        const user = await User.findOne({ where: { email } });
        if (!user) {
            return res.status(401).json({ success: false, message: 'Invalid email or password' });
        }

        const isPasswordValid = await bcrypt.compare(password, user.password);
        if (!isPasswordValid) {
            return res.status(401).json({ success: false, message: 'Invalid password' });
        }

        const token = jwt.sign({ 
            id: user.id,
            email: user.email,

        }, 
        process.env.JWT_SECRET, 
        { expiresIn: '1h' }
       );
        
        const refreshToken = jwt.sign({ id: user.id }, process.env.JWT_REFRESH_SECRET, { expiresIn: '7d' });


        res.status(200).json({ 
            success: true,
            message: 'Login successful',
            token, 
            user: {id: user.id, name: user.name }
        });
    }
    catch(err){
        console.error("Error during login:", err);
        res.status(500).json({ success: false, message: 'Internal server error' });
    }
};
